###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V5.30.0.51174/W32 for ARM     31/May/2011  15:52:03 #
# Copyright 1999-2009 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Documents and Settings\253642xvvn\桌面\nrf905se\bigbo #
#                    ard\send6\app\main.c                                     #
#    Command line =  "C:\Documents and Settings\253642xvvn\桌面\nrf905se\bigb #
#                    oard\send6\app\main.c" -lC "C:\Documents and             #
#                    Settings\253642xvvn\桌面\nrf905se\bigboard\send6\Debug\L #
#                    ist\" -lb "C:\Documents and                              #
#                    Settings\253642xvvn\桌面\nrf905se\bigboard\send6\Debug\L #
#                    ist\" -o "C:\Documents and Settings\253642xvvn\桌面\nrf9 #
#                    05se\bigboard\send6\Debug\Obj\" --no_cse --no_unroll     #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "D:\Program Files\IAR        #
#                    Systems\Embedded Workbench 5.4\arm\INC\DLib_Config_Full. #
#                    h" -I "C:\Documents and Settings\253642xvvn\桌面\nrf905s #
#                    e\bigboard\send6\library\inc\" -I "C:\Documents and      #
#                    Settings\253642xvvn\桌面\nrf905se\bigboard\send6\board\" #
#                     -I "C:\Documents and Settings\253642xvvn\桌面\nrf905se\ #
#                    bigboard\send6\app\" -I "D:\Program Files\IAR            #
#                    Systems\Embedded Workbench 5.4\arm\INC\" -Ol             #
#    List file    =  C:\Documents and Settings\253642xvvn\桌面\nrf905se\bigbo #
#                    ard\send6\Debug\List\main.lst                            #
#    Object file  =  C:\Documents and Settings\253642xvvn\桌面\nrf905se\bigbo #
#                    ard\send6\Debug\Obj\main.o                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\Documents and Settings\253642xvvn\桌面\nrf905se\bigboard\send6\app\main.c
      1          /******************** (C) COPYRIGHT 2011 SDU EMLIB ********************
      2          * File Name          : main.c
      3          * Author             : wzb@sdu
      4          * Version            : V1.1.1
      5          * Date               : 05/24/2011
      6          * Description        : USART1 communictate with pc  AND NRF905SE.
      7          ********************************************************************************/
      8          
      9          
     10          /* Includes ------------------------------------------------------------------*/
     11          #include "hw_config.h"
     12          #include "nrf905.h"
     13          
     14          
     15          /*************************************************************************
     16           * Function Name: main
     17           * Parameters: none
     18           *
     19           * Return: none
     20           *
     21           * Description: main
     22           *
     23           *************************************************************************/

   \                                 In section .text, align 4, keep-with-next
     24          void main(void)
     25          {
   \                     main:
   \   00000000   30B5               PUSH     {R4,R5,LR}
   \   00000002   8BB0               SUB      SP,SP,#+44
     26          #ifdef DEBUG
     27            debug();
     28          #endif
     29          
     30           	
     31          	   RCC_Configuration();
   \   00000004   ........           BL       RCC_Configuration
     32          	   USART_Configuration();
   \   00000008   ........           BL       USART_Configuration
     33                 SPI_Configuration();
   \   0000000C   ........           BL       SPI_Configuration
     34                 NRF905SE_Configuration();
   \   00000010   ........           BL       NRF905SE_Configuration
     35          
     36              // send packet
     37          
     38          #if 1
     39               u8 tx_array[4];
     40               u8 rx_array[4];
     41               //NRF905SE_GetRxAddress(rx_array, 4);
     42               //NRF905SE_GetTxAddress(tx_array, 4);
     43          
     44          	 NRF905SE_GetRxAddress(rx_array, NRF905SE_GetRxAddressSize());
   \   00000014   ........           BL       NRF905SE_GetRxAddressSize
   \   00000018   0100               MOVS     R1,R0
   \   0000001A   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001C   00A8               ADD      R0,SP,#+0
   \   0000001E   ........           BL       NRF905SE_GetRxAddress
     45               NRF905SE_GetTxAddress(tx_array, NRF905SE_GetTxAddressSize());
   \   00000022   ........           BL       NRF905SE_GetTxAddressSize
   \   00000026   0100               MOVS     R1,R0
   \   00000028   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   01A8               ADD      R0,SP,#+4
   \   0000002C   ........           BL       NRF905SE_GetTxAddress
     46          	
     47               usart_cls();
   \   00000030   ........           BL       usart_cls
     48               usart_puts("我是发送者， 我的地址是: ");
   \   00000034   3C48               LDR.N    R0,??main_0+0x4  ;; `?<Constant "\\316\\322\\312\\307\\267\\242\\313\\315\\3`
   \   00000036   ........           BL       usart_puts
     49          	 usart_printArray(rx_array, NRF905SE_GetRxAddressSize());
   \   0000003A   ........           BL       NRF905SE_GetRxAddressSize
   \   0000003E   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000040   0100               MOVS     R1,R0
   \   00000042   00A8               ADD      R0,SP,#+0
   \   00000044   ........           BL       usart_printArray
     50               usart_println();
   \   00000048   ........           BL       usart_println
     51               usart_puts("this is the NRF905SE transfer for send data, its info are as follows: ");
   \   0000004C   3748               LDR.N    R0,??main_0+0x8  ;; `?<Constant "this is the NRF905SE ...">`
   \   0000004E   ........           BL       usart_puts
     52               usart_println();
   \   00000052   ........           BL       usart_println
     53               usart_puts("我的接收地址： ");
   \   00000056   3648               LDR.N    R0,??main_0+0xC  ;; `?<Constant "\\316\\322\\265\\304\\275\\323\\312\\325\\2`
   \   00000058   ........           BL       usart_puts
     54               usart_printArray(rx_array, NRF905SE_GetRxAddressSize());
   \   0000005C   ........           BL       NRF905SE_GetRxAddressSize
   \   00000060   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000062   0100               MOVS     R1,R0
   \   00000064   00A8               ADD      R0,SP,#+0
   \   00000066   ........           BL       usart_printArray
     55               usart_println();
   \   0000006A   ........           BL       usart_println
     56          
     57               usart_puts("我的向目标地址：");
   \   0000006E   3148               LDR.N    R0,??main_0+0x10  ;; `?<Constant "\\316\\322\\265\\304\\317\\362\\304\\277\\2`
   \   00000070   ........           BL       usart_puts
     58               usart_printArray(tx_array, NRF905SE_GetTxAddressSize());
   \   00000074   ........           BL       NRF905SE_GetTxAddressSize
   \   00000078   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000007A   0100               MOVS     R1,R0
   \   0000007C   01A8               ADD      R0,SP,#+4
   \   0000007E   ........           BL       usart_printArray
     59               usart_puts("发送数据");
   \   00000082   2D48               LDR.N    R0,??main_0+0x14  ;; `?<Constant "\\267\\242\\313\\315\\312\\375\\276\\335">`
   \   00000084   ........           BL       usart_puts
     60               usart_println();
   \   00000088   ........           BL       usart_println
     61          
     62               //NRF905SE_SendPacket(NRF905SE_TxBuffer, NRF905SE_BufferSize); /*****发送32字节的数据包*****/
     63          	  u8 n = 48;
   \   0000008C   3025               MOVS     R5,#+48
     64               u8 payload_array[32];
     65          	 u8 payloadSize = NRF905SE_GetTxPayloadSize();
   \   0000008E   ........           BL       NRF905SE_GetTxPayloadSize
   \   00000092   0400               MOVS     R4,R0
     66          	
     67          	 //NRF905SE_SendPacket(NRF905SE_TxBuffer, NRF905SE_GetTxPayloadSize());
     68          	 NRF905SE_SendPacket(NRF905SE_TxBuffer, payloadSize);
   \   00000094   2100               MOVS     R1,R4
   \   00000096   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000098   2848               LDR.N    R0,??main_0+0x18  ;; NRF905SE_TxBuffer
   \   0000009A   ........           BL       NRF905SE_SendPacket
   \   0000009E   0DE0               B.N      ??main_1
     69          	
     70          
     71               while(1) {
     72                  if(n== 58)  {
     73                        n -= 10;
     74                        usart_println();
     75                    }
     76          		
     77                   usart_puts("发包：(");
     78                   usart_putc(n++);
     79                   usart_puts(")");
     80                   NRF905SE_GetTxPayload( payload_array, payloadSize);
     81                   usart_printArray(payload_array, payloadSize);
     82                   usart_println();
     83          
     84                   if(n %2 == 0) {
     85                     for(int i=0; i<payloadSize; i++) {
     86                        payload_array[i] -= 1;
     87                     }
     88                   }
     89                   else {
     90                       for(int i=0; i<payloadSize; i++) {
     91                        payload_array[i] += 1;
   \                     ??main_2:
   \   000000A0   02A9               ADD      R1,SP,#+8
   \   000000A2   415C               LDRB     R1,[R0, R1]
   \   000000A4   491C               ADDS     R1,R1,#+1
   \   000000A6   02AA               ADD      R2,SP,#+8
   \   000000A8   8154               STRB     R1,[R0, R2]
     92                     }
   \   000000AA   401C               ADDS     R0,R0,#+1
   \                     ??main_3:
   \   000000AC   E4B2               UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000AE   A042               CMP      R0,R4
   \   000000B0   F6DB               BLT.N    ??main_2
     93                   }
     94          		
     95          		  NRF905SE_SendPacket(payload_array, payloadSize);	
   \                     ??main_4:
   \   000000B2   2100               MOVS     R1,R4
   \   000000B4   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B6   02A8               ADD      R0,SP,#+8
   \   000000B8   ........           BL       NRF905SE_SendPacket
   \                     ??main_1:
   \   000000BC   EDB2               UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000BE   3A2D               CMP      R5,#+58
   \   000000C0   02D1               BNE.N    ??main_5
   \   000000C2   0A3D               SUBS     R5,R5,#+10
   \   000000C4   ........           BL       usart_println
   \                     ??main_5:
   \   000000C8   1D48               LDR.N    R0,??main_0+0x1C  ;; `?<Constant "\\267\\242\\260\\374\\243\\272(">`
   \   000000CA   ........           BL       usart_puts
   \   000000CE   2800               MOVS     R0,R5
   \   000000D0   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D2   ........           BL       usart_putc
   \   000000D6   6D1C               ADDS     R5,R5,#+1
   \   000000D8   12A0               ADR.N    R0,??main_0      ;; ")"
   \   000000DA   ........           BL       usart_puts
   \   000000DE   2100               MOVS     R1,R4
   \   000000E0   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000E2   02A8               ADD      R0,SP,#+8
   \   000000E4   ........           BL       NRF905SE_GetTxPayload
   \   000000E8   E4B2               UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000EA   2100               MOVS     R1,R4
   \   000000EC   02A8               ADD      R0,SP,#+8
   \   000000EE   ........           BL       usart_printArray
   \   000000F2   ........           BL       usart_println
   \   000000F6   EDB2               UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000F8   0220               MOVS     R0,#+2
   \   000000FA   95FBF0F1           SDIV     R1,R5,R0
   \   000000FE   01FB1051           MLS      R1,R1,R0,R5
   \   00000102   0029               CMP      R1,#+0
   \   00000104   0BD1               BNE.N    ??main_6
   \   00000106   0020               MOVS     R0,#+0
   \   00000108   05E0               B.N      ??main_7
   \                     ??main_8:
   \   0000010A   02A9               ADD      R1,SP,#+8
   \   0000010C   415C               LDRB     R1,[R0, R1]
   \   0000010E   491E               SUBS     R1,R1,#+1
   \   00000110   02AA               ADD      R2,SP,#+8
   \   00000112   8154               STRB     R1,[R0, R2]
   \   00000114   401C               ADDS     R0,R0,#+1
   \                     ??main_7:
   \   00000116   E4B2               UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000118   A042               CMP      R0,R4
   \   0000011A   F6DB               BLT.N    ??main_8
   \   0000011C   C9E7               B.N      ??main_4
   \                     ??main_6:
   \   0000011E   0020               MOVS     R0,#+0
   \   00000120   C4E7               B.N      ??main_3
   \   00000122   00BF               Nop      
   \                     ??main_0:
   \   00000124   29000000           DC8      ")",+0,+0
   \   00000128   ........           DC32     `?<Constant "\\316\\322\\312\\307\\267\\242\\313\\315\\3`
   \   0000012C   ........           DC32     `?<Constant "this is the NRF905SE ...">`
   \   00000130   ........           DC32     `?<Constant "\\316\\322\\265\\304\\275\\323\\312\\325\\2`
   \   00000134   ........           DC32     `?<Constant "\\316\\322\\265\\304\\317\\362\\304\\277\\2`
   \   00000138   ........           DC32     `?<Constant "\\267\\242\\313\\315\\312\\375\\276\\335">`
   \   0000013C   ........           DC32     NRF905SE_TxBuffer
   \   00000140   ........           DC32     `?<Constant "\\267\\242\\260\\374\\243\\272(">`
     96                   //NRF905SE_SetTxPayload(payload_array, payloadSize);		
     97                   //NRF905SE_SendData();
     98          
     99                   /*
    100                   for(u32 i=0; i<1000; i++) {
    101                      for(u32 j = 0; j<1000; j++)
    102                        for(u32 k=0; k<5; k++);
    103          
    104                   }
    105                  */
    106          
    107               }
    108          #endif
    109          	
    110          	 //receive data
    111          
    112          #if 0
    113          
    114               NRF905SE_SetRxAddress("1234", 4);
    115               NRF905SE_SetTxAddress("0123", 4);
    116          
    117               u8 tx_array[4];
    118               u8 rx_array[4];
    119               NRF905SE_GetRxAddress(rx_array, 4);
    120               NRF905SE_GetTxAddress(tx_array, 4);
    121          
    122               usart_cls();
    123               usart_puts("this is the NRF905SE transfer for receive data, its info are as follows: ");
    124               usart_println();
    125               usart_puts("我的接收地址： ");
    126               usart_printArray(rx_array, 4);
    127               usart_println();
    128          
    129               usart_puts("我的目标发送地址：");
    130               usart_printArray(tx_array, 4);
    131               usart_println();
    132               usart_puts("我开始接受来自发射器：");
    133               usart_printArray(tx_array, 4);
    134               usart_puts("发送来的数据：");
    135               usart_println();
    136          
    137          	u8 payloadSize = NRF905SE_GetRxPayloadSize();
    138              u8 n = 48;
    139          	while(1) {
    140          		/*****发送32字节的数据包*****/
    141                    if(n== 58 )  {
    142                        n -= 10;
    143                        usart_println();
    144                    }
    145          		if(NRF905SE_ReceivePacket(NRF905SE_RxBuffer, payloadSize) ) {
    146                              usart_puts("收包(");
    147                              usart_putc(n++);
    148                              usart_puts("): ");
    149          
    150                              usart_printArray(NRF905SE_RxBuffer, payloadSize);
    151          
    152          
    153                               usart_println();
    154          		}
    155          
    156          
    157          
    158          
    159          	}
    160          
    161          #endif
    162          	
    163          
    164          	
    165          	
    166          	
    167          	
    168            while(1);
                   ^
Warning[Pe128]: loop is not reachable from preceding code
    169          
    170          
    171          
    172          }

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\316\\322\\312\\307\\267\\242\\313\\315\\3`:
   \   00000000   CED2CAC7B7A2       DC8 "\316\322\312\307\267\242\313\315\325\337\243\254 \316\322\265\304\265\330\326\267\312\307: "
   \              CBCDD5DFA3AC
   \              20CED2B5C4B5
   \              D8D6B7CAC73A
   \              2000        
   \   0000001A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "this is the NRF905SE ...">`:
   \   00000000   746869732069       DC8 74H, 68H, 69H, 73H, 20H, 69H, 73H, 20H
   \              7320        
   \   00000008   746865204E52       DC8 74H, 68H, 65H, 20H, 4EH, 52H, 46H, 39H
   \              4639        
   \   00000010   303553452074       DC8 30H, 35H, 53H, 45H, 20H, 74H, 72H, 61H
   \              7261        
   \   00000018   6E7366657220       DC8 6EH, 73H, 66H, 65H, 72H, 20H, 66H, 6FH
   \              666F        
   \   00000020   722073656E64       DC8 72H, 20H, 73H, 65H, 6EH, 64H, 20H, 64H
   \              2064        
   \   00000028   6174612C2069       DC8 61H, 74H, 61H, 2CH, 20H, 69H, 74H, 73H
   \              7473        
   \   00000030   20696E666F20       DC8 20H, 69H, 6EH, 66H, 6FH, 20H, 61H, 72H
   \              6172        
   \   00000038   652061732066       DC8 65H, 20H, 61H, 73H, 20H, 66H, 6FH, 6CH
   \              6F6C        
   \   00000040   6C6F77733A20       DC8 6CH, 6FH, 77H, 73H, 3AH, 20H, 0
   \              00          
   \   00000047   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\316\\322\\265\\304\\275\\323\\312\\325\\2`:
   \   00000000   CED2B5C4BDD3       DC8 "\316\322\265\304\275\323\312\325\265\330\326\267\243\272 "
   \              CAD5B5D8D6B7
   \              A3BA2000    

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\316\\322\\265\\304\\317\\362\\304\\277\\2`:
   \   00000000   CED2B5C4CFF2       DC8 "\316\322\265\304\317\362\304\277\261\352\265\330\326\267\243\272"
   \              C4BFB1EAB5D8
   \              D6B7A3BA00  
   \   00000011   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\267\\242\\313\\315\\312\\375\\276\\335">`:
   \   00000000   B7A2CBCDCAFD       DC8 "\267\242\313\315\312\375\276\335"
   \              BEDD00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\267\\242\\260\\374\\243\\272(">`:
   \   00000000   B7A2B0FCA3BA       DC8 "\267\242\260\374\243\272("
   \              2800        

   \                                 In section .rodata, align 2
   \   00000000   2900               DC8 ")"
    173          
    174          
    175          #ifdef  DEBUG
    176          /*******************************************************************************
    177          * Function Name  : assert_failed
    178          * Description    : Reports the name of the source file and the source line number
    179          *                  where the assert_param error has occurred.
    180          * Input          : - file: pointer to the source file name
    181          *                  - line: assert_param error line source number
    182          * Output         : None
    183          * Return         : None
    184          *******************************************************************************/
    185          void assert_failed(u8* file, u32 line)
    186          {
    187          volatile bool Flag = TRUE;
    188            /* User can add his own implementation to report the file name and line number,
    189               ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
    190          
    191            /* Infinite loop */
    192            while (Flag )
    193            {
    194            }
    195          }
    196          #endif

   Maximum stack usage in bytes:

     Function .cstack
     -------- -------
     main         56


   Section sizes:

     Function/Label                                 Bytes
     --------------                                 -----
     main                                            324
     ?<Constant "\316\322\312\307\267\242\313\315\3   28
     ?<Constant "this is the NRF905SE ...">           72
     ?<Constant "\316\322\265\304\275\323\312\325\2   16
     ?<Constant "\316\322\265\304\317\362\304\277\2   20
     ?<Constant "\267\242\313\315\312\375\276\335">   12
     ?<Constant "\267\242\260\374\243\272(">           8
     ?<Constant ")">                                   2

 
 158 bytes in section .rodata
 324 bytes in section .text
 
 324 bytes of CODE  memory
 158 bytes of CONST memory

Errors: none
Warnings: 1
