###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V5.40.0.51500/W32 for ARM     28/Apr/2011  09:50:58 #
# Copyright (C) 1999-2009 IAR Systems AB.                                     #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Documents and Settings\Administrator\桌面\2.4G\Demo\s #
#                    ource\ov7670.c                                           #
#    Command line =  "C:\Documents and Settings\Administrator\桌面\2.4G\Demo\ #
#                    source\ov7670.c" -lC "C:\Documents and                   #
#                    Settings\Administrator\桌面\2.4G\Demo\project\EWARMv5\De #
#                    bug\List\" -lb "C:\Documents and                         #
#                    Settings\Administrator\桌面\2.4G\Demo\project\EWARMv5\De #
#                    bug\List\" -o "C:\Documents and                          #
#                    Settings\Administrator\桌面\2.4G\Demo\project\EWARMv5\De #
#                    bug\Obj\" --debug --endian=little --cpu=Cortex-M3 -e     #
#                    --fpu=None --dlib_config "C:\Program Files\IAR           #
#                    Systems\Embedded Workbench 5.4_2\arm\INC\DLib_Config_Ful #
#                    l.h" -I "C:\Documents and Settings\Administrator\桌面\2. #
#                    4G\Demo\project\EWARMv5\..\..\include\" -I               #
#                    "C:\Documents and Settings\Administrator\桌面\2.4G\Demo\ #
#                    project\EWARMv5\..\..\source\" -I "C:\Documents and      #
#                    Settings\Administrator\桌面\2.4G\Demo\project\EWARMv5\.. #
#                    \..\..\FWLib\library\inc\" -I "C:\Documents and          #
#                    Settings\Administrator\桌面\2.4G\Demo\project\EWARMv5\.. #
#                    \..\..\USBLib\library\inc\" -I "C:\Documents and         #
#                    Settings\Administrator\桌面\2.4G\Demo\project\EWARMv5\.. #
#                    \..\fatfs\" -I "C:\Program Files\IAR Systems\Embedded    #
#                    Workbench 5.4_2\arm\INC\" -Ohz                           #
#    List file    =  C:\Documents and Settings\Administrator\桌面\2.4G\Demo\p #
#                    roject\EWARMv5\Debug\List\ov7670.lst                     #
#    Object file  =  C:\Documents and Settings\Administrator\桌面\2.4G\Demo\p #
#                    roject\EWARMv5\Debug\Obj\ov7670.o                        #
#                                                                             #
#                                                                             #
###############################################################################

C:\Documents and Settings\Administrator\桌面\2.4G\Demo\source\ov7670.c
      1          
      2          /*
      3          GUANFU_WANG
      4          */
      5          
      6          
      7          #include "ov7670.h"
      8          #include "main.h"
      9          #include "ov7670config.h"

   \                                 In section .rodata, align 4
   \   char const change_reg[167][2]
   \                     change_reg:
   \   00000000   3A0440101214       DC8 58, 4, 64, 16, 18, 20, 50, 128, 23, 22, 24, 4, 25, 2, 26, 123, 3, 6
   \              328017161804
   \              19021A7B0306
   \   00000012   0C0C3E007000       DC8 12, 12, 62, 0, 112, 0, 113, 1, 114, 17, 115, 9, 162, 2, 17, 0, 122
   \              710172117309
   \              A20211007A  
   \   00000023   207B1C7C287D       DC8 32, 123, 28, 124, 40, 125, 60, 126, 85, 127, 104, 128, 118, 129
   \              3C7E557F6880
   \              7681        
   \   00000031   808288838F84       DC8 128, 130, 136, 131, 143, 132, 150, 133, 163, 134, 175, 135, 196
   \              9685A386AF87
   \              C4          
   \   0000003E   88D789E813E0       DC8 136, 215, 137, 232, 19, 224, 0, 0, 16, 0, 13, 0, 20, 16, 165, 5
   \              000010000D00
   \              1410A505    
   \   0000004E   AB0724752563       DC8 171, 7, 36, 117, 37, 99, 38, 165, 159, 120, 160, 104, 161, 3, 166
   \              26A59F78A068
   \              A103A6      
   \   0000005D   DFA7DFA8F0A9       DC8 223, 167, 223, 168, 240, 169, 144, 170, 148, 19, 229, 14, 97, 15
   \              90AA9413E50E
   \              610F        
   \   0000006B   4B16021E2721       DC8 75, 22, 2, 30, 39, 33, 2, 34, 145, 41, 7, 51, 11, 53, 11, 55, 29
   \              022291290733
   \              0B350B371D  
   \   0000007C   3871392A3C78       DC8 56, 113, 57, 42, 60, 120, 77, 64, 78, 32, 105, 93, 107, 128, 116
   \              4D404E20695D
   \              6B8074      
   \   0000008B   198D4F8E008F       DC8 25, 141, 79, 142, 0, 143, 0, 144, 0, 145, 0, 146, 0, 150, 0, 154
   \              009000910092
   \              0096009A    
   \   0000009B   80B084B10CB2       DC8 128, 176, 132, 177, 12, 178, 14, 179, 130, 184, 10, 67, 20, 68, 240
   \              0EB382B80A43
   \              1444F0      
   \   000000AA   453446584728       DC8 69, 52, 70, 88, 71, 40, 72, 58, 89, 136, 90, 136, 91, 68, 92, 103
   \              483A59885A88
   \              5B445C67    
   \   000000BA   5D495E0E6404       DC8 93, 73, 94, 14, 100, 4, 101, 32, 102, 5, 148, 4, 149, 8, 108, 10
   \              652066059404
   \              95086C0A    
   \   000000CA   6D556E116F9F       DC8 109, 85, 110, 17, 111, 159, 106, 64, 19, 231, 21, 0, 79, 128, 80
   \              6A4013E71500
   \              4F8050      
   \   000000D9   805100522253       DC8 128, 81, 0, 82, 34, 83, 94, 84, 128, 85, 0, 86, 96, 87, 144, 88
   \              5E5480550056
   \              60579058    
   \   000000E9   9E41083F0575       DC8 158, 65, 8, 63, 5, 117, 5, 118, 225, 76, 15, 119, 10, 61, 194, 75
   \              0576E14C0F77
   \              0A3DC24B    
   \   000000F9   09C960413834       DC8 9, 201, 96, 65, 56, 52, 17, 59, 2, 164, 137, 150, 0, 151, 48, 152
   \              113B02A48996
   \              00973098    
   \   00000109   2099309A849B       DC8 32, 153, 48, 154, 132, 155, 41, 156, 3, 157, 76, 158, 63, 120, 4
   \              299C039D4C9E
   \              3F7804      
   \   00000118   7901C8F0790F       DC8 121, 1, 200, 240, 121, 15, 200, 0, 121, 16, 200, 126, 121, 10, 200
   \              C8007910C87E
   \              790AC8      
   \   00000127   80790BC80179       DC8 128, 121, 11, 200, 1, 121, 12, 200, 15, 121, 13, 200, 32, 121, 9
   \              0CC80F790DC8
   \              207909      
   \   00000136   C8807902C8C0       DC8 200, 128, 121, 2, 200, 192, 121, 3, 200, 64, 121, 5, 200, 48, 105
   \              7903C8407905
   \              C83069      
   \   00000145   AA09003B422D       DC8 170, 9, 0, 59, 66, 45, 1, 0, 0, 0, 0
   \              0100000000  
   \   char const change_reg1[167][2]
   \                     change_reg1:
   \   00000150   32002A001101       DC8 50, 0, 42, 0, 17, 1, 18, 6, 18, 70, 66, 127, 77, 0, 99, 240, 100
   \              12061246427F
   \              4D0063F064  
   \   00000161   FF6520660067       DC8 255, 101, 32, 102, 0, 103, 0, 105, 93, 19, 255, 13, 129, 15, 197
   \              00695D13FF0D
   \              810FC5      
   \   00000170   141122FF2301       DC8 20, 17, 34, 255, 35, 1, 36, 52, 37, 60, 38, 161, 43, 0, 107, 170
   \              2434253C26A1
   \              2B006BAA    
   \   00000180   13FF900A9101       DC8 19, 255, 144, 10, 145, 1, 146, 1, 147, 1, 148, 95, 149, 83, 150, 17
   \              92019301945F
   \              95539611    
   \   00000190   971A983D995A       DC8 151, 26, 152, 61, 153, 90, 154, 30, 155, 0, 156, 37, 167, 101, 168
   \              9A1E9B009C25
   \              A765A8      
   \   0000019F   65A980AA809E       DC8 101, 169, 128, 170, 128, 158, 129, 166, 6, 126, 12, 127, 22, 128
   \              81A6067E0C7F
   \              1680        
   \   000001AD   2A814E826183       DC8 42, 129, 78, 130, 97, 131, 111, 132, 123, 133, 134, 134, 142, 135
   \              6F847B858686
   \              8E87        
   \   000001BB   9788A489AF8A       DC8 151, 136, 164, 137, 175, 138, 197, 139, 215, 140, 232, 141, 32, 51
   \              C58BD78CE88D
   \              2033        
   \   000001C9   00229923034A       DC8 0, 34, 153, 35, 3, 74, 0, 73, 19, 71, 8, 75, 20, 76, 23, 70, 5, 14
   \              00491347084B
   \              144C1746050E
   \   000001DB   750C5000F029       DC8 117, 12, 80, 0, 240, 41, 80, 44, 120, 0, 0, 0, 0, 0, 0, 0, 0
   \              502C78000000
   \              0000000000  
   \   000001EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000020C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000021C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000022C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000023C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000024C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000025C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000026C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000027C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000028C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
     10          #include "stm32f10x_lib.h"
     11          
     12          extern const char change_reg[CHANGE_REG_NUM][2];
     13          ////////////////////////////
     14          //功能：提供7660时钟
     15          //返回：无

   \                                 In section .text, align 2, keep-with-next
     16          void XCLK_init_ON(void)
     17          {
   \                     XCLK_init_ON:
   \   00000000   80B5               PUSH     {R7,LR}
     18            
     19              GPIO_InitTypeDef GPIO_InitStructure;
     20              RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
   \   00000002   0121               MOVS     R1,#+1
   \   00000004   0420               MOVS     R0,#+4
   \   00000006   ........           BL       RCC_APB2PeriphClockCmd
     21              GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8; 
   \   0000000A   ........           BL       ?Subroutine3
     22              GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; 
     23              GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP ; 
   \                     ??CrossCallReturnLabel_0:
   \   0000000E   1820               MOVS     R0,#+24
   \   00000010   ........           BL       ?Subroutine4
     24              GPIO_Init(GPIOA, &GPIO_InitStructure);
   \                     ??CrossCallReturnLabel_2:
   \   00000014   ........           BL       GPIO_Init
     25              RCC_MCOConfig(RCC_MCO_HSE  );//hsi
   \   00000018   0620               MOVS     R0,#+6
   \   0000001A   ........           BL       RCC_MCOConfig
     26          }
   \   0000001E   01BD               POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ?Subroutine4:
   \   00000000   8DF80300           STRB     R0,[SP, #+3]
   \   00000004   00A9               ADD      R1,SP,#+0
   \   00000006   0148               LDR.N    R0,??Subroutine4_0  ;; 0x40010800
   \   00000008   7047               BX       LR
   \   0000000A   00BF               Nop      
   \                     ??Subroutine4_0:
   \   0000000C   00080140           DC32     0x40010800

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3:
   \   00000000   4FF48070           MOV      R0,#+256
   \   00000004   ADF80000           STRH     R0,[SP, #+0]
   \   00000008   0320               MOVS     R0,#+3
   \   0000000A   8DF80200           STRB     R0,[SP, #+2]
   \   0000000E   7047               BX       LR

   \                                 In section .text, align 2, keep-with-next
     27          void XCLK_init_OFF(void)
     28          {
   \                     XCLK_init_OFF:
   \   00000000   80B5               PUSH     {R7,LR}
     29            
     30              GPIO_InitTypeDef GPIO_InitStructure;
     31              RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
   \   00000002   0121               MOVS     R1,#+1
   \   00000004   0420               MOVS     R0,#+4
   \   00000006   ........           BL       RCC_APB2PeriphClockCmd
     32              GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8; 
   \   0000000A   ........           BL       ?Subroutine3
     33              GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; 
     34              GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
   \                     ??CrossCallReturnLabel_1:
   \   0000000E   1020               MOVS     R0,#+16
   \   00000010   ........           BL       ?Subroutine4
     35              GPIO_Init(GPIOA, &GPIO_InitStructure);
   \                     ??CrossCallReturnLabel_3:
   \   00000014   ....               B.N      ?Subroutine0
     36          }

   \                                 In section .text, align 4, keep-with-next
   \                     ?Subroutine0:
   \   00000000   ........           BL       GPIO_Init
   \   00000004   01BD               POP      {R0,PC}          ;; return
   \   00000006   00BF               Nop      
   \                     ??Subroutine0_0:
   \   00000008   00100140           DC32     0x40011000
     37          

   \                                 In section .text, align 4, keep-with-next
     38          void ov7670_GPIO_Init(void)
     39          {
   \                     ov7670_GPIO_Init:
   \   00000000   80B5               PUSH     {R7,LR}
     40            
     41            GPIO_InitTypeDef GPIO_InitStructure;
     42             // Enable GPIOC  clock
     43            RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);
   \   00000002   0121               MOVS     R1,#+1
   \   00000004   1020               MOVS     R0,#+16
   \   00000006   ........           BL       RCC_APB2PeriphClockCmd
     44            GPIO_InitStructure.GPIO_Pin =  OV7670_VSYNC_BIT;
   \   0000000A   1020               MOVS     R0,#+16
   \   0000000C   ADF80000           STRH     R0,[SP, #+0]
     45            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
   \   00000010   0420               MOVS     R0,#+4
   \   00000012   8DF80300           STRB     R0,[SP, #+3]
     46            //GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
     47            GPIO_Init(GPIOC, &GPIO_InitStructure);
   \   00000016   00A9               ADD      R1,SP,#+0
   \   00000018   ....               LDR.N    R0,??Subroutine0_0  ;; 0x40011000
   \   0000001A   00BF               Nop      
   \   0000001C                      REQUIRE ?Subroutine0
   \   0000001C                      ;; // Fall through to label ?Subroutine0
     48           
     49          }
     50          
     51          /********************************************************************
     52          函数功能：7670中断配制
     53          入口参数：无。
     54          返    回：无。
     55          备    注：无。
     56          ********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     57          void ov7670_Interrupts_Config(void)
     58          {
   \                     ov7670_Interrupts_Config:
   \   00000000   80B5               PUSH     {R7,LR}
     59            NVIC_InitTypeDef NVIC_InitStructure;
     60          
     61            
     62          #ifdef  VECT_TAB_RAM  
     63            /* Set the Vector Table base location at 0x20000000 */ 
     64            NVIC_SetVectorTable(NVIC_VectTab_RAM, 0x0); 
     65          #else  /* VECT_TAB_FLASH  */
     66            /* Set the Vector Table base location at 0x08000000 */ 
     67            NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0x0);   
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   4FF00060           MOV      R0,#+134217728
   \   00000008   ........           BL       NVIC_SetVectorTable
     68          #endif
     69          
     70            /* Configure one bit for preemption priority */
     71            NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
   \   0000000C   4FF4E060           MOV      R0,#+1792
   \   00000010   ........           BL       NVIC_PriorityGroupConfig
     72            
     73            /* Enable the EXTI9_5 Interrupt 
     74            NVIC_InitStructure.NVIC_IRQChannel = EXTI9_5_IRQChannel;
     75            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
     76            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
     77            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
     78            NVIC_Init(&NVIC_InitStructure);
     79            */
     80            
     81            
     82              /* Configure one bit for preemption priority */
     83            NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
   \   00000014   4FF4C060           MOV      R0,#+1536
   \   00000018   ........           BL       NVIC_PriorityGroupConfig
     84            
     85            /* Enable the EXTI9_5 Interrupt */
     86            NVIC_InitStructure.NVIC_IRQChannel = EXTI4_IRQChannel;
   \   0000001C   0A20               MOVS     R0,#+10
   \   0000001E   8DF80000           STRB     R0,[SP, #+0]
     87            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
   \   00000022   0020               MOVS     R0,#+0
   \   00000024   8DF80100           STRB     R0,[SP, #+1]
     88            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
   \   00000028   8DF80200           STRB     R0,[SP, #+2]
     89            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \   0000002C   0120               MOVS     R0,#+1
   \   0000002E   8DF80300           STRB     R0,[SP, #+3]
     90            NVIC_Init(&NVIC_InitStructure);
   \   00000032   00A8               ADD      R0,SP,#+0
   \   00000034   ........           BL       NVIC_Init
     91            
     92          
     93            
     94          
     95          }
   \   00000038   01BD               POP      {R0,PC}          ;; return
     96          
     97          
     98          

   \                                 In section .text, align 2, keep-with-next
     99          void OV7670_EXTI_Config(void)
    100          {
   \                     OV7670_EXTI_Config:
   \   00000000   00B5               PUSH     {LR}
   \   00000002   83B0               SUB      SP,SP,#+12
    101            EXTI_InitTypeDef EXTI_InitStructure;
    102            
    103           // GPIO_EXTILineConfig(GPIO_PORT_SOURCE_HREF_CMOS, GPIO_PIN_SOURCE_HREF_CMOS);
    104           /// EXTI_InitStructure.EXTI_Line = EXTI_LINE_HREF_CMOS;
    105           /// EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
    106           // EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
    107           // EXTI_InitStructure.EXTI_LineCmd = ENABLE;
    108           // EXTI_Init(&EXTI_InitStructure);
    109          //  EXTI_GenerateSWInterrupt(EXTI_LINE_HREF_CMOS);
    110            
    111          
    112            GPIO_EXTILineConfig(GPIO_PORT_SOURCE_VSYNC_CMOS, GPIO_PIN_SOURCE_VSYNC_CMOS);
   \   00000004   0421               MOVS     R1,#+4
   \   00000006   0220               MOVS     R0,#+2
   \   00000008   ........           BL       GPIO_EXTILineConfig
    113            EXTI_InitStructure.EXTI_Line = EXTI_LINE_VSYNC_CMOS;
   \   0000000C   1020               MOVS     R0,#+16
   \   0000000E   0090               STR      R0,[SP, #+0]
    114            EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   8DF80400           STRB     R0,[SP, #+4]
    115            EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising ;
   \   00000016   0820               MOVS     R0,#+8
   \   00000018   8DF80500           STRB     R0,[SP, #+5]
    116            EXTI_InitStructure.EXTI_LineCmd = ENABLE;
   \   0000001C   0120               MOVS     R0,#+1
   \   0000001E   8DF80600           STRB     R0,[SP, #+6]
    117            EXTI_Init(&EXTI_InitStructure);
   \   00000022   00A8               ADD      R0,SP,#+0
   \   00000024   ........           BL       EXTI_Init
    118            EXTI_GenerateSWInterrupt(EXTI_LINE_VSYNC_CMOS);
   \   00000028   1020               MOVS     R0,#+16
   \   0000002A   ........           BL       EXTI_GenerateSWInterrupt
    119          
    120          }
   \   0000002E   07BD               POP      {R0-R2,PC}       ;; return
    121          
    122          
    123          
    124          
    125          
    126          
    127          
    128          
    129          ////////////////////////////
    130          //功能：写OV7660寄存器
    131          //返回：1-成功	0-失败

   \                                 In section .text, align 2, keep-with-next
    132          unsigned char wrOV7670Reg(unsigned char regID, unsigned char regDat)
    133          {
   \                     wrOV7670Reg:
   \   00000000   38B5               PUSH     {R3-R5,LR}
   \   00000002   0546               MOV      R5,R0
   \   00000004   0C46               MOV      R4,R1
    134          		startSCCB();
   \   00000006   ........           BL       startSCCB
    135          	if(0==SCCBwriteByte(0x42))
   \   0000000A   4220               MOVS     R0,#+66
   \   0000000C   ........           BL       SCCBwriteByte
   \   00000010   00B9               CBNZ     R0,??wrOV7670Reg_0
    136          	{
    137          		stopSCCB();
   \                     ??wrOV7670Reg_1:
   \   00000012   ....               B.N      ?Subroutine2
    138          		return(0);
    139          	}
    140          	delay_us(100);
                 	^
Warning[Pe223]: function "delay_us" declared implicitly
   \                     ??wrOV7670Reg_0:
   \   00000014   6420               MOVS     R0,#+100
   \   00000016   ........           BL       delay_us
    141            	if(0==SCCBwriteByte(regID))
   \   0000001A   2846               MOV      R0,R5
   \   0000001C   ........           BL       SCCBwriteByte
   \   00000020   0028               CMP      R0,#+0
   \   00000022   F6D0               BEQ.N    ??wrOV7670Reg_1
    142          	{
    143          		stopSCCB();
    144          		return(0);
    145          	}
    146          	delay_us(100);
   \   00000024   6420               MOVS     R0,#+100
   \   00000026   ........           BL       delay_us
    147            	if(0==SCCBwriteByte(regDat))
   \   0000002A   2046               MOV      R0,R4
   \   0000002C   ........           BL       SCCBwriteByte
   \   00000030   0028               CMP      R0,#+0
   \   00000032   EED0               BEQ.N    ??wrOV7670Reg_1
    148          	{
    149          		stopSCCB();
    150          		return(0);
    151          	}
    152            	stopSCCB();
   \   00000034   ....               B.N      ?Subroutine1
    153          	
    154            	return(1);
    155          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2:
   \   00000000   ........           BL       stopSCCB
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   32BD               POP      {R1,R4,R5,PC}

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1:
   \   00000000   ........           BL       stopSCCB
   \   00000004   0120               MOVS     R0,#+1
   \   00000006   32BD               POP      {R1,R4,R5,PC}    ;; return
    156          ////////////////////////////
    157          //功能：读OV7660寄存器
    158          //返回：1-成功	0-失败

   \                                 In section .text, align 2, keep-with-next
    159          unsigned char rdOV7670Reg(unsigned char regID, unsigned char *regDat)
    160          {
   \                     rdOV7670Reg:
   \   00000000   38B5               PUSH     {R3-R5,LR}
   \   00000002   0546               MOV      R5,R0
   \   00000004   0C46               MOV      R4,R1
    161          	//通过写操作设置寄存器地址
    162          	startSCCB();
   \   00000006   ........           BL       startSCCB
    163          	if(0==SCCBwriteByte(0x42))
   \   0000000A   4220               MOVS     R0,#+66
   \   0000000C   ........           BL       SCCBwriteByte
   \   00000010   00B9               CBNZ     R0,??rdOV7670Reg_0
    164          	{
    165          		stopSCCB();
   \                     ??rdOV7670Reg_1:
   \   00000012   ....               B.N      ?Subroutine2
    166          		return(0);
    167          	}
    168          	delay_us(100);
                 	^
Warning[Pe223]: function "delay_us" declared implicitly
   \                     ??rdOV7670Reg_0:
   \   00000014   6420               MOVS     R0,#+100
   \   00000016   ........           BL       delay_us
    169            	if(0==SCCBwriteByte(regID))
   \   0000001A   2846               MOV      R0,R5
   \   0000001C   ........           BL       SCCBwriteByte
   \   00000020   0028               CMP      R0,#+0
   \   00000022   F6D0               BEQ.N    ??rdOV7670Reg_1
    170          	{
    171          		stopSCCB();
    172          		return(0);
    173          	}
    174          	stopSCCB();
   \   00000024   ........           BL       stopSCCB
    175          	
    176          	delay_us(100);
   \   00000028   6420               MOVS     R0,#+100
   \   0000002A   ........           BL       delay_us
    177          	
    178          	//设置寄存器地址后，才是读
    179          	startSCCB();
   \   0000002E   ........           BL       startSCCB
    180          	if(0==SCCBwriteByte(0x43))
   \   00000032   4320               MOVS     R0,#+67
   \   00000034   ........           BL       SCCBwriteByte
   \   00000038   0028               CMP      R0,#+0
   \   0000003A   EAD0               BEQ.N    ??rdOV7670Reg_1
    181          	{
    182          		stopSCCB();
    183          		return(0);
    184          	}
    185          	delay_us(100);
   \   0000003C   6420               MOVS     R0,#+100
   \   0000003E   ........           BL       delay_us
    186            	*regDat=SCCBreadByte();
   \   00000042   ........           BL       SCCBreadByte
   \   00000046   2070               STRB     R0,[R4, #+0]
    187            	noAck();
   \   00000048   ........           BL       noAck
    188            	stopSCCB();
   \   0000004C   ....               B.N      ?Subroutine1
    189            	return(1);
    190          }
    191          
    192          
    193          
    194          
    195          /* OV7670_init() */
    196          //返回1成功，返回0失败

   \                                 In section .text, align 4, keep-with-next
    197          unsigned char OV7670_init(void)
    198          {
   \                     OV7670_init:
   \   00000000   38B5               PUSH     {R3-R5,LR}
    199          	unsigned char temp;
    200          	
    201          	unsigned int i=0;
    202          
    203          	//uchar ovidmsb=0,ovidlsb=0; 
    204                  XCLK_init_ON();
   \   00000002   ........           BL       XCLK_init_ON
    205          	ov7670_GPIO_Init();
   \   00000006   ........           BL       ov7670_GPIO_Init
    206          	SCCB_GPIO_Config();//io init..
   \   0000000A   ........           BL       SCCB_GPIO_Config
    207                 
    208          	temp=0x80;
   \   0000000E   8020               MOVS     R0,#+128
   \   00000010   8DF80000           STRB     R0,[SP, #+0]
    209                  Delay(1);
                         ^
Warning[Pe223]: function "Delay" declared implicitly
   \   00000014   0120               MOVS     R0,#+1
   \   00000016   ........           BL       Delay
    210          	if(0==wrOV7670Reg(0x12, temp)) //Reset SCCB
   \   0000001A   9DF80010           LDRB     R1,[SP, #+0]
   \   0000001E   1220               MOVS     R0,#+18
   \   00000020   ........           BL       wrOV7670Reg
   \   00000024   0028               CMP      R0,#+0
   \   00000026   01D1               BNE.N    ??OV7670_init_0
    211          	{
    212                    return 0 ;
   \                     ??OV7670_init_1:
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   32BD               POP      {R1,R4,R5,PC}
    213          	}
    214          	Delay(10);
   \                     ??OV7670_init_0:
   \   0000002C   0A20               MOVS     R0,#+10
   \   0000002E   ........           BL       Delay
    215          
    216          	if(0==rdOV7670Reg(0x0b, &temp))//读ID
   \   00000032   00A9               ADD      R1,SP,#+0
   \   00000034   0B20               MOVS     R0,#+11
   \   00000036   ........           BL       rdOV7670Reg
   \   0000003A   0028               CMP      R0,#+0
   \   0000003C   F4D0               BEQ.N    ??OV7670_init_1
    217          	{
    218          		return 0 ;
    219          	}
    220                  Delay(10);
   \   0000003E   0A20               MOVS     R0,#+10
   \   00000040   ........           BL       Delay
    221                   if(temp==0x73)//OV7670
   \   00000044   124C               LDR.N    R4,??OV7670_init_2  ;; change_reg
   \   00000046   9DF80000           LDRB     R0,[SP, #+0]
   \   0000004A   7328               CMP      R0,#+115
   \   0000004C   0DD1               BNE.N    ??OV7670_init_3
    222          	 {
    223          	   for(i=0;i<CHANGE_REG_NUM;i++)
   \   0000004E   0025               MOVS     R5,#+0
    224          	   {
    225          		if( 0==wrOV7670Reg(change_reg[i][0],change_reg[i][1]))
   \                     ??OV7670_init_4:
   \   00000050   04EB4500           ADD      R0,R4,R5, LSL #+1
   \   00000054   4178               LDRB     R1,[R0, #+1]
   \   00000056   14F81500           LDRB     R0,[R4, R5, LSL #+1]
   \   0000005A   ........           BL       wrOV7670Reg
   \   0000005E   0028               CMP      R0,#+0
   \   00000060   E2D0               BEQ.N    ??OV7670_init_1
    226          		{
    227          			return 0;
    228          		}
    229          		}
   \   00000062   6D1C               ADDS     R5,R5,#+1
   \   00000064   A72D               CMP      R5,#+167
   \   00000066   10D2               BCS.N    ??OV7670_init_5
   \   00000068   F2E7               B.N      ??OV7670_init_4
    230             	  
    231          	}
    232                  else if(temp==0x21)//OV7725
   \                     ??OV7670_init_3:
   \   0000006A   2128               CMP      R0,#+33
   \   0000006C   0DD1               BNE.N    ??OV7670_init_5
    233          	{
    234          	   for(i=0;i<CHANGE_REG_NUM1;i++)
   \   0000006E   0025               MOVS     R5,#+0
    235          	   {
    236          		if( 0==wrOV7670Reg(change_reg1[i][0],change_reg1[i][1]))
   \                     ??OV7670_init_6:
   \   00000070   04EB4500           ADD      R0,R4,R5, LSL #+1
   \   00000074   90F85111           LDRB     R1,[R0, #+337]
   \   00000078   90F85001           LDRB     R0,[R0, #+336]
   \   0000007C   ........           BL       wrOV7670Reg
   \   00000080   0028               CMP      R0,#+0
   \   00000082   D1D0               BEQ.N    ??OV7670_init_1
    237          		{
    238          			return 0;
    239          		}
    240          	   }
   \   00000084   6D1C               ADDS     R5,R5,#+1
   \   00000086   4A2D               CMP      R5,#+74
   \   00000088   F2D3               BCC.N    ??OV7670_init_6
    241          	
    242          	}
    243          
    244          	return 0x01; //ok
   \                     ??OV7670_init_5:
   \   0000008A   0120               MOVS     R0,#+1
   \   0000008C   32BD               POP      {R1,R4,R5,PC}    ;; return
   \   0000008E   00BF               Nop      
   \                     ??OV7670_init_2:
   \   00000090   ........           DC32     change_reg
    245          } 
    246          

   Maximum stack usage in bytes:

     Function                 .cstack
     --------                 -------
     OV7670_EXTI_Config           16
     OV7670_init                  16
     XCLK_init_OFF                 8
     XCLK_init_ON                  8
     ov7670_GPIO_Init              8
     ov7670_Interrupts_Config      8
     rdOV7670Reg                  16
     wrOV7670Reg                  16


   Section sizes:

     Function/Label           Bytes
     --------------           -----
     change_reg                672
     change_reg1
     XCLK_init_ON               32
     ?Subroutine4               16
     ?Subroutine3               16
     XCLK_init_OFF              22
     ?Subroutine0               12
     ov7670_GPIO_Init           28
     ov7670_Interrupts_Config   58
     OV7670_EXTI_Config         48
     wrOV7670Reg                54
     ?Subroutine2                8
     ?Subroutine1                8
     rdOV7670Reg                78
     OV7670_init               148

 
 672 bytes in section .rodata
 528 bytes in section .text
 
 528 bytes of CODE  memory
 672 bytes of CONST memory

Errors: none
Warnings: 3
